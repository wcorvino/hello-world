 
 BRKCRT-2601
 
 Notes;
 ***Cisco D Cloud ? Practice

!vrf-r rip
!vrf-e eigrp
!vrf-o ospf
!vrf-s static
!vrf-b bgp

!interface loopback0
!interface loopback1
!interface loopback2

!interface fa0/0.0
!interface fa0/0.1
!interface fa0/0.2

!interface fa0/1.0
!interface fa0/1.1
!interface fa0/1.2


rtr1-green
vlan 10
vlan 11
vlan 12

rtr1 red
vlan 20
vlan 21
vlan 22


!https://www.ciscolive.com/c/dam/r/ciscolive/emea/docs/2020/pdf/BRKCRT-2601.pdf

vrf definition VRF-R !multi-AF VRF
 address-family ipv4

ip vrf VRF-R         !ipV4 vrf
 
interface Ethernet0/0.12 
 ip vrf forwarding VRF-R

interface Loopback1
 ip vrf forwarding VRF-R

vrf definition VRF-E
 address-family ipv4

ip vrf VRF-E 

interface Ethernet0/0.112 
 ip vrf forwarding VRF-E

interface Loopback2
 ip vrf forwarding VRF-E

 vrf definition VRF-O
 address-family ipv4
 
ip vrf VRF-O 

interface Ethernet0/0.212 
 ip vrf forwarding VRF-O

interface Loopback3
 ip vrf forwarding VRF-O
 
 
 Ethernet0/0      10.1.12.1
 Ethernet0/0.12   10.1.12.1
 Ethernet0/0.14   10.1.14.1
 Ethernet0/0.112  10.1.112.1
 Ethernet0/0.114  10.1.114.1
 Ethernet0/0.212  10.1.212.1
 Ethernet0/0.214  10.1.214.1
 Loopback1        1.1.1.1
 Loopback2        1.1.1.1
 Loopback3        1.1.1.1
 Loopback11       1.1.1.1
 Loopback111      1.1.1.1
 
 ~section
 ip vrf VRF-B
  rd 2:2
 
 ip vrf VRF-R 
 ip vrf VRF-E 
 ip vrf VRF-O
 ip vrf VRF-S
 
 !
 ip vrf forwarding VRF-R
 ip vrf forwarding VRF-E
 ip vrf forwarding VRF-O
 ip vrf forwarding VRF-S
 ip vrf forwarding VRF-B
 ! Interfaces
 
R1#
interface Ethernet0/0.12
 encapsulation dot1q 12
 ip vrf forwarding VRF-R
 ip address 10.1.12.1 255.255.255.0
end
  
interfaqce Ethernet0/0.112 
 encapsulation dot1q 112
 ip vrf forwarding VRF-E
 ip address 10.1.112.1 255.255.255.0
end
 
interfaqce Ethernet0/0.212 
 encapsulation dot1q 212
 ip vrf forwarding VRF-O
 ip address 10.1.212.1 255.255.255.0
 ip ospf network point-to-point
end

router rip
 !
 address-family ipv4 vrf VRF-R
  network 1.0.0.0
  network 10.0.0.0
  no auto-summary
  version 2
 exit-address-family
!
router eigrp 10
 !        
 address-family ipv4 vrf VRF-E autonomous-system 10
  network 2.2.2.2 0.0.0.0
  network 10.1.112.0 0.0.0.255
 exit-address-family
 auto-summary
!
=======================================================

! interface
 r1#sh ip vrf interface

 Lo111		1.1.1.1		VRF-B
 Se1/0.12	10.1.12.1	VRF-B
 Lo2		1.1.1.1		VRF-E
 Et0/0.112	10.1.112.1	VRF-E
 Et0/0.114	10.1.114.1	VRF-E
 Lo3		1.1.1.1		VRF-O
 Et0/0.212	10.1.212.1	VRF-O
 Et0/0.214	10.1.214.1	VRF-O
 Lo1		1.1.1.1		VRF-R
 Et0/0.12	10.1.12.1	VRF-R
 Et0/0.14	10.1.14.1	VRF-R
 Lo11		1.1.1.1		VRF-S
 Tu12		10.1.12.1	VRF-S
 
 vrf definition
!! serial link using encap frame-relay & no keep-alive (nailed up)
 
interface Serial1/0
 no ip address
 encapsulation frame-relay
 no keepalive
 serial restart-delay 0
end

!example segmentation over a serial link

interface Serial1/0.12 point-to-point
 ip vrf forwarding VRF-B
 ip address 10.1.12.1 255.255.255.0
 frame-relay interface-dlci 201
end

router bgp 1
 bgp log-neighbor-changes
 !
 address-family ipv4 vrf VRF-B 
  bgp router-id 1.1.1.1
  network 1.1.1.1 mask 255.255.255.255
  neighbor 10.1.12.2 remote-as 2
  neighbor 10.1.12.2 activate
 exit-address-family

sh ip bgp vpnv4 all s  (vrf's are specified under vpnv4 family)
sh ip bgp vpnv4 all


==========================================

!tunnel	--vrf aware static routes, tunnels using GRT vs vrf routing table to establish tunnel endpoints
ip vrf VRF-S
 rd 11:11
 interface Loopback101
 ip address 11.11.11.11 255.255.255.255 !(Global Routing Table)
 
interface Tunnel12
 ip vrf forwarding VRF-S
 ip address 10.1.12.1 255.255.255.0
 tunnel source Loopback101
 tunnel destination 22.22.22.22 !(GRT-Local route)
end
 
interface Tunnel11
 ip vrf forwarding VRF-S
 ip address 1.1.1.1 255.255.255.255
end
  
ip route vrf VRF-S 2.2.2.2 255.255.255.255 10.1.12.2
 
sh ip route vrf VRF-S
 
 !tunnel	
ip vrf VRF-S
 rd 22:22
 interface Loopback102
 ip address 22.22.22.22 255.255.255.255 !Global Routing Table)
 
interface Tunnel12
 ip vrf forwarding VRF-S
 ip address 10.1.12.2 255.255.255.0
 tunnel source Loopback102
 tunnel destination 11.11.11.11 !(GRT-Local route)
end

interface Tunnel22
 ip vrf forwarding VRF-S
 ip address 2.2.2.2 255.255.255.255
 
ip route vrf VRF-S 1.1.1.1 255.255.255.255 10.1.12.1  ! Static route to Lo1 via Tunnel12

!!static routes learned across virtualized WAN-link !

! iosv-1#sh ip route vrf VRF-S
!  S        2.2.2.2 [1/0] via 10.1.12.2
! iosv-2#sh ip route vrf VRF-S
!  S        1.1.1.1 [1/0] via 10.1.12.1

end-tunnel

 ============================================================================
ip vrf VRF-B 
 rd 2:2
 
!!VRF-Lite Summary 
 !! Created a VRF in router (r1) for RIB/FIB and interface segmentation
 !! no MPLS, LDP or MP-BGP required
 !! Optimal solution when VRF count is small (<8)
 !! Supports mulitcast and QoS solutions
 !! Leverage current routing protocol knowledge and apply it to PE-CE VRF routing
 
 
*** see Slide 38

MPLS - multiprotocol label switching

prefix - reachability PE-to-PE via labels (using label forwarding database LFIB), PE router to PE router 
  BGP peers at provider edge /CE-PE peers / vpnv4 adjacency
  BGP free core
  
  label stacking ! on the way in
  label swapping ! in the core
  label popping  ! on the way out
  
  
  MP-BGP bringing it all together
  Provider Edge
  PE receives an IPv4 update on a VRF interface (eBGP/OSPF/RIP/EIGRP)
  PE translates it into VPNv4 address   96-bit address ; 64-bit RD + 32 bit IPv4 address) 111:1:10.1.1.0/24
	- assigns an RT per VRF configuration
	- rewrites next-hop attribute to itself
	- assigns a label based on VRF and/or interface
	
			Prefix	-->	VPNv4 111:1:10.1.1.0/24		IPv4 10.1.1.0/24
Site1		 															Site2
	CE			PE	<---VPNv4 iBGP relationship---> 	PE			CE
				VRF										VRF
	
	     redist												redist
		 IGP/Static											"
		 into BGP on PE										"
		 
Route Target - & filtering within a VRF - used accross a peering adjacency
	1.Route targets dictate which VRF will receive what routes
	2.Can be used to allow specifc access to centralized services
	3.e.g Cust A ; 
	  Site2, Site3 & Site4 will not be able to exchange routes with each other
	  VRF A
	  Import 222:1
	  Import 333:1
	  Import 444:1
	  Export 111:1
	  
	  VRF B
	  Import 111:1
	  Export 222:1
	  
	  VRF C
	  Import 111:1
	  Export 333:1
	  
	  VRF D
	  Import 111:1
	  Export 444:1
	  
	  **Route Targets are a 64-Bit Value and are carried in BGP as an extended community
	  
	  send-communtiy extended - every neighbor in both directions
	  
	  
MPLS VPN & MP-BGP  
VRF Configuration (PE)
!PE Router - Multiple VRF
ip vrf VRF-1
rd 65100:10
route-target import 65102:10
route-target export 65102:10	  

ip vrf VRF-2
rd 65100:20
route-target import 65102:20
route-target export 65102:20

interface Fa0/1.10
ip vrf forwarding VRF-1

interface Fa0/1.20
ip vrf forwarding VRF-2

MP-iBGP Configuration (PE)
!PE router
router bgp 65102
 no bgp default ipv4-unicast  ! no bgp in BGP Free core
 neighbor 2.2.2.2 remote-as 65102
 
 address-family vpnv4    !vpnv4 Label Exchange
 neighbor 2.2.2.2 activate
 neighbor 2.2.2.2 send-community extended
 exit-address-family
 
 address-family ipv4 vrf VRF-1  !bgp 65102 is now vrf aware
 redistribute rip
 exit-address-family
 
 
 
 
 
 !command_end



	  
	


 